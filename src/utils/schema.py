"""Defines a pandas dataframe schema for dsa membership data."""

from typing import ClassVar

from pandera import Check, Column, DataFrameSchema, Index

STATE_ABBR: tuple = (
    "AK",
    "AL",
    "AR",
    "AZ",
    "CA",
    "CO",
    "CT",
    "DC",
    "DE",
    "FL",
    "GA",
    "HI",
    "IA",
    "ID",
    "IL",
    "IN",
    "KS",
    "KY",
    "LA",
    "MA",
    "MD",
    "ME",
    "MI",
    "MN",
    "MO",
    "MS",
    "MT",
    "NC",
    "ND",
    "NE",
    "NH",
    "NJ",
    "NM",
    "NV",
    "NY",
    "OH",
    "OK",
    "OR",
    "PA",
    "RI",
    "SC",
    "SD",
    "TN",
    "TX",
    "UT",
    "VA",
    "VT",
    "WA",
    "WI",
    "WV",
    "WY",
)


class ColumnValidation:
    """Represents the allowed values for some columns of data."""

    YEARLY_DUES_STATUS: ClassVar[list[str]] = [
        "past_due",
        "overdue",
        "never",
        "lapsed",
        "active",
        "canceled_by_admin",
        "canceled_by_failure",
        "canceled_by_processor",
        "canceled_by_user",
    ]
    MONTHLY_DUES_STATUS: ClassVar[list[str]] = [
        "2mo_plus_failed",
        "past_due",
        "overdue",
        "never",
        "lapsed",
        "active",
        "canceled_by_admin",
        "canceled_by_failure",
        "canceled_by_processor",
        "canceled_by_user",
    ]
    MEMBERSHIP_TYPE: ClassVar[list[str]] = ["yearly", "monthly", "one-time", "lifetime", "income-based"]
    MEMBERSHIP_STATUS: ClassVar[list[str]] = ["member in good standing", "member", "lapsed"]
    UNION_MEMBER_STATUS: ClassVar[list[str]] = [
        "Yes",
        "Yes, current union member",
        "Yes, retired union member",
        "Currently organizing my workplace",
        "No",
        "No, not a union member",
        "No, but former union member",
        "unknown",
    ]
    STUDENT_STATUS: ClassVar[list[str]] = [
        "No",
        "Yes",
        "Yes, graduate student",
        "Yes, college student",
        "Yes, high school student",
    ]
    MAILING_PREF: ClassVar[list[str]] = ["Membership card only", "No", "no", "Yes"]


schema = DataFrameSchema(
    columns={
        "first_name": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="First Name",
        ),
        "middle_name": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Middle Name or Initial",
        ),
        "last_name": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Last Name",
        ),
        "family_members": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Last Name",
        ),
        "email": Column(
            dtype="string",
            checks=None,
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="Email Address",
        ),
        "do_not_call": Column(
            dtype="boolean",
            checks=None,
            default=False,
            nullable=True,
            coerce=True,
            description=None,
            title="Do Not Call",
        ),
        "p2ptext_optout": Column(
            dtype="boolean",
            checks=None,
            default=False,
            nullable=True,
            coerce=True,
            description=None,
            title="Do Not Text",
        ),
        "best_phone": Column(
            dtype="string",
            checks=Check.str_matches(r"^[a-z0-9-]+$"),
            nullable=True,
            coerce=True,
            description=None,
            title="Best Phone",
        ),
        "mobile_phone": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Mobile Phone",
        ),
        "home_phone": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Home Phone",
        ),
        "work_phone": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Work Phone",
        ),
        "join_date": Column(
            dtype="datetime64",
            checks=Check.str_matches(r"^\d{4}-\d{2}-\d{2}$"),
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="Membership Original Join Date",
        ),
        "xdate": Column(
            dtype="datetime64",
            checks=Check.str_matches(r"^\d{4}-\d{2}-\d{2}$"),
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="Membership Expiration Date",
        ),
        "membership_type": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.MEMBERSHIP_TYPE),
            nullable=True,
            coerce=True,
            description=None,
            title="Membership Type",
        ),
        "monthly_dues_status": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.MONTHLY_DUES_STATUS),
            nullable=True,
            coerce=True,
            description=None,
            title="Monthly Dues Status",
        ),
        "yearly_dues_status": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.YEARLY_DUES_STATUS),
            nullable=True,
            coerce=True,
            description=None,
            title="Yearly Dues Status",
        ),
        "membership_status": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.MEMBERSHIP_STATUS),
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="Membership Status",
        ),
        "memb_status_letter": Column(
            dtype="string",
            checks=None,
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="Membership Status Letter",
        ),
        "union_member": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.UNION_MEMBER_STATUS),
            default="unknown",
            nullable=True,
            coerce=True,
            description=None,
            title="Union - Status",
        ),
        "union_name": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Union - Name",
        ),
        "union_local": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Union - Local",
        ),
        "accommodations": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Accommodations",
        ),
        "race": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Race",
        ),
        "student_yes_no": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.STUDENT_STATUS),
            nullable=True,
            coerce=True,
            description=None,
            title="Student - Status",
        ),
        "student_school_name": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Student - School Name",
        ),
        "mailing_pref": Column(
            dtype="string",
            checks=Check.isin(ColumnValidation.MAILING_PREF),
            nullable=True,
            coerce=True,
            description=None,
            title="Mailing Preference",
        ),
        "address1": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Address Line 1",
        ),
        "address2": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Address Line 2",
        ),
        "city": Column(
            dtype="string",
            checks=None,
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="City",
        ),
        "state": Column(
            dtype="string",
            checks=Check.isin(STATE_ABBR),
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="State",
        ),
        "zip": Column(
            dtype="string",
            checks=None,
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="ZIP Code",
        ),
        "country": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="Country",
        ),
        "dsa_chapter": Column(
            dtype="string",
            checks=None,
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="DSA Chapter Name",
        ),
        "ydsa_chapter": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="yDSA Chapter Name",
        ),
        "congressional_district": Column(
            dtype="string",
            checks=None,
            default="",
            nullable=False,
            coerce=True,
            description=None,
            title="Congressional District",
        ),
        "membership_length_years": Column(
            dtype="int32",
            checks=Check.greater_than_or_equal_to(min_value=0),
            default="",
            nullable=False,
            coerce=True,
            description="Does not account for gaps in membership.",
            title="Membership Length (Years)",
        ),
        "membership_length_months": Column(
            dtype="int32",
            checks=Check.greater_than_or_equal_to(min_value=0),
            default="",
            nullable=False,
            coerce=True,
            description="Does not account for gaps in membership.",
            title="Membership Length (Years)",
        ),
        "lon": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(min_value=-180),
                Check.less_than_or_equal_to(max_value=180),
            ],
            nullable=True,
            coerce=True,
            description="Used for mapping members on a map.",
            title="Longitude",
        ),
        "lat": Column(
            dtype="float32",
            checks=[
                Check.greater_than_or_equal_to(min_value=-90),
                Check.less_than_or_equal_to(max_value=90),
            ],
            nullable=True,
            coerce=True,
            description="Used for mapping members on a map.",
            title="Latitude",
        ),
        "branch": Column(
            dtype="string",
            checks=None,
            nullable=True,
            coerce=True,
            description=None,
            title="DSA Chapter Branch",
        ),
    },
    checks=None,
    index=Index(
        dtype="int64",
        checks=None,
        nullable=False,
        coerce=True,
        name="actionkit_id",
        description=None,
        title="Actionkit ID",
    ),
    dtype=None,
    coerce=True,
    strict=False,
    name=None,
    ordered=False,
    unique=None,
    report_duplicates="all",
    unique_column_names=False,
    add_missing_columns=True,
    title="DSA Membership List",
    description=None,
)
