name: Python checks

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron:  '0 9 * * 1'
  workflow_dispatch:

permissions: read-all

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.11'
          - '3.12'
          - '3.13'
          # - '3.14-dev'
        os:
          - 'ubuntu-latest'
          - 'windows-latest'
          - 'macos-latest'
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            api.github.com:443
            github.com:443
            pypi.org:443
            raw.githubusercontent.com:443
            release-assets.githubusercontent.com:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - uses: install-pinned/uv@b3c09d653574e9565eee68b45174a4e890aef58d

      - run: uv pip install --system -e .[dev]

      - id: cache-pytest
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .pytest_cache
          key: ${{ runner.os }}-pytest-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}

      - run: pytest
        env:
          COVERAGE_FILE: .coverage.${{ runner.os }}.${{ matrix.python-version }}

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: coverage-${{ runner.os }}${{ matrix.python-version }}
          path: .coverage.${{ runner.os }}.${{ matrix.python-version }}
          include-hidden-files: true

  ruff-format:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.13'
          cache: pip

      - uses: install-pinned/uv@b3c09d653574e9565eee68b45174a4e890aef58d

      - run: uv pip install --system -e .[dev]

      - id: cache-ruff
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .ruff_cache
          key: ${{ runner.os }}-ruff-3.13-${{ hashFiles('pyproject.toml') }}

      - id: run-ruff
        run: ruff format --diff .

  ruff-check:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      security-events: write

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.13'
          cache: pip

      - uses: install-pinned/uv@b3c09d653574e9565eee68b45174a4e890aef58d

      - run: uv pip install --system -e .[dev]

      - id: cache-ruff
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .ruff_cache
          key: ${{ runner.os }}-ruff-3.13-${{ hashFiles('pyproject.toml') }}

      - id: run-ruff-sarif
        run: ruff check --output-format=sarif -o results.sarif .

      - uses: github/codeql-action/upload-sarif@3599b3baa15b485a2e49ef411a7a4bb2452e7f93
        if: ( success() || failure() ) && contains('["success", "failure"]', steps.run-ruff-sarif.outcome)
        with:
          sarif_file: results.sarif

      - id: run-ruff
        if: ( success() || failure() ) && contains('["success", "failure"]', steps.run-ruff-sarif.outcome)
        run: ruff check --output-format=github .

  bandit:
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.13'
          cache: pip

      - uses: install-pinned/uv@b3c09d653574e9565eee68b45174a4e890aef58d

      - run: uv pip install --system -e .[dev]

      - id: run-bandit-sarif
        run: |
          bandit --confidence-level 'medium' --format 'sarif' --output 'results.sarif' --recursive 'src'

      - uses: github/codeql-action/upload-sarif@3599b3baa15b485a2e49ef411a7a4bb2452e7f93
        if: ( success() || failure() ) && contains('["success", "failure"]', steps.run-bandit-sarif.outcome)
        with:
          sarif_file: results.sarif

      - id: run-bandit
        if: failure() && contains('["failure"]', steps.run-bandit-sarif.outcome)
        run: bandit --confidence-level 'medium' --recursive 'src'

  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.13'
          cache: pip

      - uses: install-pinned/uv@b3c09d653574e9565eee68b45174a4e890aef58d

      - run: uv pip install --system -e .[dev]

      - id: cache-mypy
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-mypy-${{ hashFiles('pyproject.toml') }}

      - run: mypy .

  coverage:
    runs-on: ubuntu-latest

    needs: test

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            img.shields.io:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        id: download
        with:
          pattern: coverage-*
          merge-multiple: true

      - id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@970a227e0c16ef4589a99a9970ab0ceb8c53059a
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  pre-commit:
    runs-on: ubuntu-latest

    needs:
      - ruff-format
      - ruff-check
      - bandit

    permissions:
      contents: write

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            proxy.golang.org:443
            pypi.org:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.13
          cache: pip

      - uses: install-pinned/uv@b3c09d653574e9565eee68b45174a4e890aef58d

      - run: uv pip install --system -e .[dev]

      - id: cache-pre-commit
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: .pre-commit-cache
          key: ${{ runner.os }}-pre-commit-3.13

      - run: pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: .pre-commit-cache
